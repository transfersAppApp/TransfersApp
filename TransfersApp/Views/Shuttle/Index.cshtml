@model TransfersApp.Models.SearchModels.ShuttleSearchModel
@using CoordinateSharp;

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        <label class="control-label col-md-2">Search Text</label>
        <div class="col-md-3">
            @Html.EditorFor(model => model.NameSearchText, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NameSearchText, "", new { @class = "text-danger" })
        </div>
        <label class="control-label col-md-2">Passengers Count</label>

        <div class="col-md-3">
            @Html.DropDownList("PassengersCount", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PassengersCount, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-3">
            <input type="submit" value="Search" class="btn btn-default" />
        </div>
    </div>
    </div>
}
<table class="table">
    <tr>
        <th>
            IsDeleted
        </th>
        <th>
            Name
        </th>
        <th>
            Time
        </th>
        <th>
            Price
        </th>
        <th>
            Passengers
        </th>
        <th>
            Start Rally Point
        </th>
        <th></th>
    </tr>

    @foreach (var item in ViewBag.Items)
    {
        if (item.IsDeleted)
        {
            <tr class="deleted">
                <td>
                    @item.IsDeleted
                </td>
                <td>
                    @item.Name
                </td>
                <td>
                    @item.TimeSlot.Hours : @item.TimeSlot.Minutes
                </td>
                <td>
                    @item.Price
                </td>
                <td>
                    @item.Passengers
                </td>
                <td>

                    @{
                        if (item.StartRallyPoint != null && !string.IsNullOrEmpty(item.StartRallyPoint.Coordinates))
                        {
                            try
                            {
                               
                                Coordinate c;
                                var rightCoords = item.StartRallyPoint.Coordinates;
                                if (rightCoords.Contains(":"))
                                {
                                    rightCoords = item.StartRallyPoint.Coordinates.Replace(',', '.').Replace(':', ',');
                                }
                                Coordinate.TryParse(rightCoords, DateTime.UtcNow, out c);// new Coordinate(lan, lon, DateTime.UtcNow);
                                if (c != null)
                                {
                                    string location = $"{c.Latitude.Degrees}°{c.Latitude.Minutes}'{c.Latitude.Seconds}\"N +{c.Longitude.Degrees}°{c.Longitude.Minutes}'{c.Longitude.Seconds}\"E";
                                    location = location.Replace(',', '.');
                                    string url = "https://www.google.com/maps/place/" + location + "/";
                                    url = url.Replace(" ", string.Empty);
                                    <a href="@url" target="_blank"> @item.StartRallyPoint.Coordinates</a>
                                }

                            }
                            catch (Exception t)
                            {
                            }
                        }
                    }
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }
        else
        {
            <tr>
                <td>
                    @item.IsDeleted
                </td>
                <td>
                    @item.Name
                </td>
                <td>
                    @item.TimeSlot.Hours : @item.TimeSlot.Minutes
                </td>
                <td>
                    @item.Price
                </td>
                <td>
                    @item.Passengers
                </td>
                <td>

                    @{
                        if (item.StartRallyPoint != null && !string.IsNullOrEmpty(item.StartRallyPoint.Coordinates))
                        {
                            try
                            {
                                Coordinate c;
                                Coordinate.TryParse(item.StartRallyPoint.Coordinates, DateTime.UtcNow, out c);// new Coordinate(lan, lon, DateTime.UtcNow);

                                string location = $"{c.Latitude.Degrees}°{c.Latitude.Minutes}'{c.Latitude.Seconds}\"N +{c.Longitude.Degrees}°{c.Longitude.Minutes}'{c.Longitude.Seconds}\"E";
                                location = location.Replace(',', '.');
                                string url = "https://www.google.com/maps/place/" + location + "/";
                                url = url.Replace(" ", string.Empty);
                                <a href="@url" target="_blank"> @item.StartRallyPoint.Coordinates</a>
                            }
                            catch (Exception t)
                            {
                            }
                        }
                    }
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
   }
    }

</table>
